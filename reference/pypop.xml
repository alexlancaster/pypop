<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<article condition="main" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>PyPop: a software framework for population genomics: analyzing
 large-scale multi-locus genotype data</title>

 <articleinfo>
  <authorgroup>
   <author role="uc">
    <firstname>Alex</firstname>
    <surname>Lancaster</surname>
    
    <affiliation>
     <orgname>University of California, Berkeley</orgname>
     <orgdiv>Department of Integrative Biology</orgdiv>
     <address><street>3060 Valley Life Sciences</street>
     <city>Berkeley</city> <state>CA</state>
     <postcode>94720</postcode> <country>USA</country>
     <email>alexl@socrates.berkeley.edu</email></address>
    </affiliation>
   </author>

   <author role="uc">
    <firstname>Mark</firstname>
    <othername>P.</othername>
    <surname>Nelson</surname>
   </author>

   <author role="uc">
    <firstname>Diogo</firstname>
    <surname>Meyer</surname>
   </author>

   <author role="uc">
    <firstname>Glenys</firstname>
    <surname>Thomson</surname>
   </author>

   <author role="uv">
    <firstname>Richard</firstname>
    <othername>M.</othername>
    <surname>Single</surname>
    <affiliation>
     <orgname>University of Vermont</orgname>
     <orgdiv>Department of Biometry</orgdiv>
     <address><street>Hills Science Building</street>
      <city>Burlington</city> <state>VT</state>  
      <postcode>05405</postcode> <country>USA</country></address>
    </affiliation>
   </author>
   
  </authorgroup>
  
  <pubdate>Last modified: $Date$</pubdate>
 </articleinfo>

 <abstract>
   <para>Software to analyze multi-locus genotype data for entire
   populations is useful for estimating haplotype frequencies,
   deviation from Hardy-Weinberg equilibrium and patterns of linkage
   disequilibrium.  These statistical results are important to both
   those interested in human genome variation and disease
   predisposition as well as evolutionary genetics.  As part of the
   13<superscript>th</superscript> International Histocompatibility
   and Immunogenetics Working Group (IHWG), we have developed a
   software framework (<application>PyPop</application>).  The primary
   novelty of this package is that it allows integration of statistics
   <emphasis>across</emphasis> large numbers of data-sets by heavily
   utilizing the XML file format and the <application>R</application> statistical package to view
   graphical output, while retaining the ability to inter-operate with
   existing software.  Largely developed to address human population
   data, it can, however, be used for population based data for any
   organism.  We tested our software on the data from the
   13<superscript>th</superscript> IHWG which involved data sets from
   at least 50 laboratories each of up to 1000 individuals with 9 MHC
   loci (both class I and class II) and found that it scales to large
   numbers of data sets well.</para>
 </abstract>
 
 <section>
  <title>Introduction</title> 

  <para condition="psb2003">Several major factors account for
   variation in the human genome: <emphasis>mutation,</emphasis>
   <emphasis>random genetic drift</emphasis>,
   <emphasis>migration</emphasis> (or <emphasis>gene flow</emphasis>)
   and <emphasis>natural selection</emphasis>.  Understanding of the
   relative roles of these evolutionary forces is important for the
   study of both complex and Mendelian diseases, since they can affect
   our ability to identify and localize disease predisposing variants
   and our power to recognize underlying functional mechanisms through
   which predisposing genes can become relatively common in a
   population.</para>

  <para>In particular, genetic systems which are highly polymorphic
   can implicate natural selection as an important factor in
   maintaining variation.  Genetic systems such as the Human Leukocyte
   Antigen (HLA) region (the Major Histocompatibility Complex [MHC]
   for humans) are highly polymorphic.  Six classical class I and II
   loci each contain up to 399 alleles <citation
    role="citep">Rhodes:Trowsdale:1999</citation>.
  </para>

  <para>Several basic population genetics statistics from multi-locus
   genotype data can help us understand these patterns of variation,
   and their implications for disease studies and evolutionary
   genetics.  These statistics include, but are not limited to
   estimating haplotype frequencies, identifying deviation from
   Hardy-Weinberg equilibrium and locating patterns of linkage
   disequilibrium in a given population.</para>

  <para>In population studies several implementations of programs and
   routines to calculate these basic statistics exist, but are mainly
   oriented towards analyzing statistics on a population-by-population
   basis.  The ability to cross-correlate these statistical features
   across many population data-sets will enable the identification of
   features in the genetic data that can further our understanding of
   the functional and disease predisposing role of specific alleles,
   and conversely allow us to rule out others.</para>

  <para>Currently, packages for analyzing population data already
   exist such as
   <application>Arlequin</application><citation>Schneider:2000</citation>, 
   <application>PHYLIP</application><citation
    role="citep">Felsenstein:1989</citation> and
   <application>Genepop</application><citation>Genepop</citation>. In
   general, however, they are not oriented towards large-scale
   cross-population data analyses.  Analogous to the tools being
   developed for sequence analysis and search, we seek a framework in
   which basic statistical data from population genetic analyses can
   be housed, interrogated and visualized in such a way that important
   features of interest to both the biomedical investigator and the
   evolutionary biologist can be highlighted.</para>

  <para>We also did not want to reinvent the wheel, so, where possible
   we can inter-operate with existing population genetic analysis
   packages (either as part of the framework or through file formats).
   In this way, our software, <emphasis>PyPop</emphasis>
   (<emphasis>Py</emphasis>thon for <emphasis>Pop</emphasis>ulation
   Genetics) can be viewed as an integrating framework which draws on
   the strengths of existing tools in the community.</para>

  <section>
   <title>IHWG: International Histocompatibility Working Group</title>

   <para>The primary motivation for developing this project was our
    role as the <quote>Biostatistics Core</quote>, part of the
    International Histocompatibility Working Group (<ulink
     url="http://www.ihwg.org/">IHWG</ulink>).  The IHWG collected
    population data on the HLA region and largely focused on the HLA
    classical class I (A, B, and C) (1.8 Mb) and class II (DR, DQ, and
    DP) (1.2 Mb) genes, which flank the class III region on chromosome
    6 (ch. 6p21.31).</para>

   <para>As part of the Anthropology and Human Diversity component of
    the IHWG, data from populations from upwards of 50 laboratories
    was made available via a database housed at the Fred Hutchison
    Cancer Research Institute (the <quote>Database Core</quote>).  The
    IHWG provided standardized typing reagents to each lab involved in
    the component, which resulted in high resolution genotype data for
    each population.</para>

   <para>The molecular characterization of these alleles thus allowed
    us to use both the allele frequency (the raw allele
    <quote>calls</quote>) and the underlying sequence information (the
    <quote>calls</quote> can be converted into sequences if desired)
    as input to the analysis framework.
    <application>PyPop</application> does not distinguish between
    allele calls or sequence data and can transparently handle
    both.</para>

  </section>

  <section condition="psb2003">
   <title>Population genetic tests and statistics</title>

   <para>The particular cross-population statistics we wished to
    address included: (1) conformity to Hardy-Weinberg expectations,
    (2) tests for balancing selection; (3) haplotype distributions and
    patterns of linkage disequilibrium among populations; and (4)
    other tests such as worldwide patterns of genetic
    differentiation.</para>

   <formalpara>
    <title>Hardy-Weinberg</title>

    <para>Hardy-Weinberg equilibrium essentially states that unless
     there are counteracting forces, the frequencies of alleles will
     not change in a population and the expected genotype frequencies
     each generation are determined by the allele frequencies, and are
     termed Hardy-Weinberg proportions (HWP).  In the context of
     multi-population analyses we can use deviation from HWP to
     determine whether this results from: (1) typing error (the first
     possibility investigated); (2) an <quote>admixed</quote>,
     or merged population; (3) operation of natural selection; or (4)
     inbreeding. </para>
   </formalpara>

   <formalpara>
    <title>Ewens-Watterson test of neutrality</title> 

    <para>This is a test with the null hypothesis of neutral evolution
     and determines the probability that the observed homozygosity
     under HWP, for a given sample size and observed number of
     alleles, is more extreme than the expected homozygosity under
     random neutral mutations and genetic drift (neutrality).  This
     test can tell us whether selection, either directional (observed
     homozygosity &gt; expected homozygosity) or balancing (observed
     homozygosity &lt; expected homozygosity) is in operation on a
     particular locus across populations.
    </para>
   </formalpara>

   <formalpara>
    <title>Haplotype estimation and linkage disequilibrium</title>

    <para>Linkage disequilibrium (LD) describes the non-random
     association of alleles at different genetic loci.  Through
     estimating haplotype frequencies, it is possible to estimate LD
     in a population, the presence of significant LD can be due to
     history for very closely linked genes and can also indicate the
     operation of selection. </para>
   </formalpara>

   <formalpara>
    <title>Other statistics</title> 

    <para>Other individual-level population genetic statistics can
     also be calculated, such as F<subscript>st</subscript>, which
     describes the apportionment of genetic diversity within
     subpopulations, relative to a larger population, allowing us the
     estimate the amount of admixture in a population.</para>
   </formalpara>

  </section>

  <section>
   <title>Requirements</title>

   <para>The data sets we wished to analyze were highly heterogeneous.
    Datasets varied considerably in the number of loci typed (from two
    to nine), number of individuals sampled (from less than 50 to
    1000), and number of alleles at each locus (from 5 to 179).  Given
    that we had such highly diverse data sets, we nevertheless wished
    to generate analyses that could be integrated in a systematic way,
    this led to a set of requirements for the software
    framework:</para>

   <itemizedlist>

    <listitem>
     <formalpara>
      <title>modular</title> <para>each analysis (e.g. Hardy Weinberg)
       can be run stand-alone or as part of a battery of tests</para>
     </formalpara>
    </listitem>

    <listitem>
     <formalpara><title>configurable</title>

      <para>analyses can be switched on or off as required by the user
       in a simple configuration file</para>

     </formalpara>
    </listitem>

    <listitem>
     <formalpara><title>a filter</title>
      <para>all output from the analyses should be available as input
       to other programs</para>
     </formalpara>
    </listitem>
    
    <listitem>
     <formalpara>
      <title>standardized output</title>

      <para>output should be generated in the open standard format
       XML</para>
     </formalpara>
    </listitem>

    <listitem>
     <formalpara><title>integrating</title>

      <para>platform should allow simple integration of modules
       written in other languages (e.g., C) and/or third party
       software</para>
     </formalpara>
    </listitem>
   </itemizedlist>

  </section>
  
  <section>
   <title>Integrating with existing software</title>

   <para>Where possible, we would like to integrate with existing
    software.  <application>Arlequin</application>
    <citation>Schneider:2000</citation> and
    <application>PHYLIP</application><citation>Felsenstein:1989</citation> 
    are packages that deal with some aspect of population genetic
    statistics.  In addition, we had some existing in-house software,
    such as <application>emhaplofreq</application>, a program for
    haplotype estimation for the highly polymorphic HLA loci, and
    <application>gthwe</application>, a program for implementing  Guo
    and Thompson's Hardy-Weinberg exact test<citation
     role="citeyearpar">Guo:Thompson:1992</citation>.</para>

   <para>In using these programs, however, we realized a need for a
    tool that could integrate features of existing software, and where
    needed, implement missing features that would realize our goals of
    doing large-scale population genetic data analysis.  Specific
    limitations that we wished to address were:</para>

   <orderedlist>
    <listitem>
     <formalpara><title>Modularity</title> 

      <para>Programs should allow different options to be set for
       analysis and produce content that is easily parsable, not a
       monolithic output set of statistics (such as unstructured plain
       ASCII text or HTML).</para>
     </formalpara>
    </listitem>

    <listitem>
     <formalpara><title>Batch-ability</title>

      <para>It should be simple to set up an entire job in an
       unattended <quote>batch mode</quote>, involving the creation of
       (or modification of) a configuration file with a text editor,
       followed by the invocation of a script.  Software that relies
       on a <quote>captive user interface</quote>, for a population to
       be analyzed and requires user interaction such as mouse clicks
       and menus, makes it difficult to analyze hundreds of data sets.
      </para>
     </formalpara>
    </listitem>

    <listitem>
     <formalpara>
      <title>Scalability</title> 
      
      <para>It should be straightforward, for example, to gather a
       single statistic for several populations and display it in a
       table without a laborious manual search across many files. This
       relates partly to the previous point: often existing software
       was oriented towards smaller and less heterogeneous datasets.
       More typical in evolutionary genetics studies is integrating
       results across several populations at one or two loci, rather
       than many populations with a large number of loci and high
       variability in the number of individuals.</para>
     </formalpara>
    </listitem>
    
    <listitem>
     <formalpara>
      <title>Open-source</title>
      
      <para>We plan to release our software under an open source
       license <citation>OSI</citation>.  Software that is open-source
       allows others to extend and re-use components, allows
       interoperation via an open and published interfaces, and can
       reduce duplication of effort within the community. Some
       existing software that was not open-source required reverse
       engineering of their file formats and run-time behaviour in
       order to be able to communicate and write interfaces to them.
       <!-- effort that could be more beneficially spent improving
       that software -->
      </para>
     </formalpara>
    </listitem>

    <listitem>
     <formalpara>
      <title>Cross-platform</title>

      <para>Software should be cross platform, and not be tied to
       proprietary features.  In particular it should be be available
       to run high-performance UNIX platforms such as GNU/Linux or
       Solaris as well as Windows and Macintosh platforms. </para>
     </formalpara>
    </listitem>
   </orderedlist>
  </section>
 </section>

 <section>
  <title>Method</title>

  <section>
   <title>Overall design</title>

   <para>To integrate the data analyses for multiple populations, the
    analysis pipeline for <application>PyPop</application> has been
    designed in two major parts, or phases, the first is the basic
    population genetic analyses, and the second integrates the results
    of these analyses across multiple populations.  The overall data
    and work flow is shown in <xref
     linkend="pypop:work-flow"/>.</para>

   <figure id="pypop:work-flow">
   <title>Work flow</title>
   <mediaobject>
    <imageobject>
     <imagedata fileref="work-flow.jpg" align="center" scale="99"/>  <!-- scale="45" -->
    </imageobject>
    <textobject>
     <phrase>Diagram of software work-flow can be found at: http://allele5.biol.berkeley.edu/ihwg/work-flow.jpg</phrase>
    </textobject>
   </mediaobject>
  </figure>
  </section>

  <section>
   <title>Implementation</title>

   <para>We decided to implement the project in the object-oriented
    scripting language Python<citation>Python</citation>.  It is an
    interpreted language allowing for rapid prototyping of modules and
    has a convenient standard library of functions.  Through use of
    the the Simple Wrapper Interface Generator (SWIG
    <citation>SWIG</citation>), it is also straightforward to
    <quote>wrap</quote> existing code in C, C++ or Java and call it
    from Python.</para>

   <para>In line with our philosophy of integrating with <quote>best
   of breed</quote> open-source components, we leveraged the work of
   the Numeric Python <citation>Numpy</citation> project, which
   provides efficient data structures for holding large arrays of
   data, and <application>R</application>, the open-source implementation
   <citation>Ihaka:Gentleman:1996</citation> of the programming
   language <application>S</application>.  As our XSLT parser, we
   chose the fast C-based <application>libxslt</application>
   <citation>Libxslt</citation> from the GNOME project
   <citation>GNOME</citation>.
   </para>
  </section>

  <section>
   <title>Data flow</title>
   
   <para>In phase I, before analysis begins, the multi-locus genotype
    data for each population (stored in a text file with the
    <filename>.pop</filename> extension), is passed through a filter
    module for data cleaning.  Next, the basic population genetic
    analyses are run for each population file from the database.  The
    filter module is a set of rules that traps any allele name which
    does not have a close match in the database of HLA
    alleles<citation>IMGT</citation> maintained by Steve Marsh of the
    Anthony Nolan Trust in the UK. Although at present this is
    HLA-specific, it has been designed in such a way that it is simple
    to write a filter for other types of population data, and if 
    desired (if the data is already <quote>clean</quote>), it can be
    simply switched off.  Next the analysis begins.  Depending on the
    users configuration, this can include basic allele count data; the
    Hardy-Weinberg statistics; haplotype estimates; and the
    Ewens-Watterson test of neutrality (represented by the green
    modules in <xref linkend="pypop:work-flow" />).  The results of
    the analyses are stored in an XML file format as shown in <xref
    linkend="pypop:sample-xml"/>.</para>
   
   <figure id="pypop:sample-xml">
    <title>Extract from sample XML output file</title>
<programlisting><![CDATA[
<dataanalysis date="2002-07-09-05-01-18">
   <filename>ukimid_nireland.pop</filename>
   <pypop-version>DEVEL_VERSION</pypop-version>
   <populationdata>
     <labcode>UKIMID</labcode>
     <method>SSOP</method>
     <ethnic>Irish</ethnic>
     <contin>Europe</contin>
     <collect>Northern Ireland</collect>
     <latit>54 degrees 40 minutes north</latit>
     <longit>6 degrees 45 minutes west</longit>
     <complex>3</complex>
     <popname>NIreland</popname>
     <totals>
       <indivcount>1000</indivcount>
       <allelecount>2000</allelecount>
       <locuscount>9</locuscount>
       <lociWithDataCount>4</lociWithDataCount>
     </totals>
   </populationdata>
   <locus name="A">
     <allelecounts>
       <untypedindividuals>0</untypedindividuals>
       <indivcount>1000</indivcount>
       <allelecount>2000</allelecount>
       <distinctalleles>26</distinctalleles>
       <allele name="0101">
         <frequency>0.20200 </frequency><count>404</count>
       </allele>
...
]]></programlisting>
   </figure>

   <para>XML was chosen as the output format because: 1) it can be
    read as input by other programs and; 2) it is readily
    transformable into human-readable form (e.g., a text file) or
    web-form (e.g., HTML) via XSLT (eXtensible Stylesheet Language for
    Transformations)<citation>XSLT</citation>.</para>

   <para>In phase II, the results of the data analyses of the
    individual data files are integrated, and the benefits of using
    XML as the storage and exchange format are realized.  There are
    two major benefits: one relevant for displaying results of each
    individual run, the second, far more powerful benefit, for
    aggregating the data for cross-population meta-analyses and
    transforming it as input for third party packages.</para>

   <para>First, since many of the analyses (notably estimating the
    significance of all pairwise linkage disequilibrium) can take a
    considerable amount of time, especially if the population consists
    of many individuals and is highly polymorphic, the
    <emphasis>analysis generation</emphasis> stage is decoupled from
    the <emphasis>analysis presentation</emphasis> stage.  This
    enables tweaking of the <quote>human-readable</quote> text output
    of the individual files of the presentation without completely
    re-running the analyses.  A sample text output is shown in <xref
     linkend="pypop:sample-txt" />. The same XML content can
    also be used to generate an HTML version or web version of the
    same data set.
   </para>

   <figure id="pypop:sample-txt">
    <title>Extract from sample plain text output generated from XML data</title>
    <programlisting format="linespecific"><![CDATA[
Performed on the 'ukimid_nireland.pop' file at: 2002-07-09-05-01-18

Population Summary
==================

       Lab code: UKIMID
  Typing method: SSOP
      Ethnicity: Irish
      Continent: Europe
Collection site: Northern Ireland
       Latitude: 54 degrees 40 minutes north
      Longitude: 6 degrees 45 minutes west
Population Name: NIreland
[...]

1.1. Allele Counts [A]
______________________

Untyped individuals: 0
Sample Size (n): 1000
Allele Count (2n): 2000
Distinct alleles (k): 26

Counts ordered by frequency   | Counts ordered by name        
Name      Frequency (Count)   | Name      Frequency (Count)   
0201      0.27400   548       | 0101      0.20200   404       
0101      0.20200   404       | 0201      0.27400   548       
]]></programlisting>
   </figure>

   <para>Second, the results of Phase I are used to investigate
    patterns of variation across populations and within populations.
    Examples include comparisons of evidence of selection, using the
    homozygosity test of neutrality for a given locus for all
    populations (e.g., DPA1 for all populations), or comparing the
    sets of loci in significant linkage disequilibrium across
    populations. This is implemented using XSLT to transform all the
    desired sets of output XML files into tables of data that are read
    by the statistical package <application>R</application>.</para>
   
   <para>A sample output of this process is shown in <xref
     linkend="pypop:ld.wn.summary"/>.  This is an output plot from
    <application>R</application> and depicts for each of the loci
    analyzed as part of the IHWG workshop, the proportion of
    populations in which the linkage disequilibrium, as measured by
    the W<subscript>n</subscript> statistic, exceed 0.6.</para>

   <figure id="pypop:ld.wn.summary">
    <title>Sample graphical output from <quote>meta-analysis</quote>:
    proportions of populations with linkage disequilibrium measure
    W<subscript>n</subscript> greater than 0.6</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="ld-wn-summary.jpg" scale="80"/>
     </imageobject>
    </mediaobject>
   </figure>

   <para>The XML output (both the individual population-level data
    files, and the aggregated multi-population data) can be
    transformed (via XSLT) into formats suitable for input to other
    programs.  Currently we have a prototype module for generating
    input for <application>PHYLIP</application> and a prototype module
    to generate <application>Arlequin</application>
    <filename>.arp</filename> files.
   </para>

  </section>
 </section>

 <section>
  <title>Results and discussion</title>

  <section>
   <title>Analyzing IHWG workshop data</title>
   
   <para>The <application>PyPop</application> framework was used to
    analyze the full set of IHWG data from both the
    12<superscript>th</superscript> and
    13<superscript>th</superscript> workshops.  With 119 separate
    data-sets (some of which individually required up to 9 days to
    complete the basic per-population statistics), it was
    straightforward to set up a batch program to generate the
    individual output analyses.  For each file, an individual XML file
    was generated.  From these individual files, using XSLT
    stylesheets as described above in phase II of
    <application>PyPop</application>, it was straightforward to
    generate the input data files for the statistical package,
    <application>R</application>.  The <application>R</application>
    code was set up to generate overall graphs for many population
    genetic parameters of interest.  In particular, the analysis
    allows <quote>slicing</quote> of the data along a number of axes.
    As an example, we can view Hardy Weinberg deviation, for all
    geographic regions at a given locus, or view all loci for a given
    region. As another example, we can view the number of populations
    that have data for a given region (<xref
    linkend="pypop:pops-by-locus"/>), or number of populations for
    which data was provided for a given locus (<xref
    linkend="pypop:pops-by-region"/>).</para>

   <figure id="pypop:pops-by-locus">
    <title>Sample metadata output: viewing number of populations by locus</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="pops-by-locus.jpg" scale="90"/>
     </imageobject>
    </mediaobject>
   </figure>

   <figure id="pypop:pops-by-region">
    <title>Sample metadata output, a second way to view data: number
     of populations within each region</title>
    <mediaobject>
     <imageobject>
      <imagedata fileref="pops-by-region.jpg" scale="90"/>
     </imageobject>
    </mediaobject>
   </figure>

   <para>This <quote>meta-analysis</quote> code is modular and can
    cope with non-HLA data, and thus can potentially be useful for
    other large-scale population genetic analyses.  The significance
    is that the complete pipeline, from analyzing the individual data
    files, to the generation of the overall <quote>meta</quote> output
    can be completely automated from the command-line.  Further, the
    flexibility of the XML format, allows us to easily extract and
    output data for future data analyses without requiring
    regeneration of the basic population genetics statistics.</para>

  </section>

  <section>
   <title>Role and significance</title>

   <para>It's important to note that <application>PyPop</application>
    is not attempting to supplant or replace other, more established,
    population genetics analysis packages. The basic population
    genetic statistics computed by <application>PyPop</application>
    are not new in and of themselves, nor is the ability to perform
    analyses on multiple populations
    (<application>Arlequin</application> can currently do this).
    Indeed, <application>PyPop</application> can use existing packages
    to calculate them. However the approach of integrating information
    in highly heterogeneous datasets on a large scale is new, and not
    currently available in the evolutionary genetics community.  In
    addition to tests unavailable in existing projects, the uniqueness
    of the present project is that it is intended to be a
    high-throughput system that enables population genetics to join
    the realm of genomics.</para>

  </section>


  <section>
   <title>Future directions</title>

   <para>In the future we plan to continue development on the modules
    that can inter-operate with <application>PHYLIP</application> and
    <application>Arlequin</application>.  We also plan to take the
    Ewens-Watterson test of neutrality down to the amino-acid level
    (by considering each amino acid site as a genetic locus),
    necessitating the translation of the allele <quote>calls</quote>
    into sequence data (where possible).  This will result in a useful
    module for those wishing to analyze allele data at the sequence
    level.  Longer-term possibilities include developing a graphical
    front-end, possibly web-based, integration with data mining tools
    such as clustering analysis, and currently under discussion is
    integration with the NCBI's new <application>dbMHC</application>
    database<citation>dbMHC</citation>.  We also plan to  release
    <application>PyPop</application> under an open source license.
    Details will be made available at the Thomson lab website: <ulink
     url="http://allele5.biol.berkeley.edu/">http://allele5.biol.berkeley.edu/</ulink></para>

  </section>
  
 </section>

 <ackno>This work has benefited from the support of NIH grant AI49213
 (13<superscript>th</superscript> IHW).  Thanks to Steve Mack.</ackno>

 <xi:include href="biblio.xml"/>
 
</article>
 
<!--
Local variables:
sgml-local-catalogs: ("catalog")
sgml-indent-step: 1
sgml-indent-data: 1
ispell-skip-html: t
End:
-->
