<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<?PSGML nofill programlisting screen?>
<appendix condition="main">
 <title>Technical Appendix</title>

 <sect1 id="pypop:design-uml">
  <title>UML specification</title>
  
  <para>A sample UML use-case is given in <xref linkend="pypop:design"/>.
   This indicates the processing steps involved the calculation of
   single statistic.  Note the exact object and method names are
   schematic only and may be out-of-date with respect to the current
   implementation.</para>
  
  
  <figure id="pypop:design">
   <title>Schematic UML design</title>
   <mediaobject>
    <imageobject>
     <imagedata fileref="design.png" align="center"/>  
    </imageobject>
    <textobject>
     <phrase>Diagram of UML design can be found at:
      http://allele5.biol.berkeley.edu/ihwg/design.png</phrase>
    </textobject>
  </mediaobject>
  </figure>
 </sect1>
 
 <sect1 id="pypop:data-interchange" condition="main">
  <title>API (Application Programmers Interface)</title>
  
  <para>The current <application>PyPop</application> Application
   Programmers Interface (API), can be found at:  <ulink
    url="api/index.html">API</ulink>.  A UML diagram of the class
   diagram is shown in <xref linkend="pypop:api"/>.</para>
  
  
  <figure id="pypop:api">
   <title>UML diagram of API</title>
   <mediaobject>
    <imageobject>
     <imagedata fileref="api.png" align="center"/>
    </imageobject>
    <textobject>
     <phrase>Diagram of UML API can be found at: http://allele5.biol.berkeley.edu/ihwg/api.png</phrase>
    </textobject>
   </mediaobject>
  </figure>
 </sect1>
 
 <sect1 condition="main">
  <title>Data interchange</title>
  <sect2 id="pypop:data-interchange-format">
   <title>Data format</title>

   <para>Input for PyPop consists of two files: a configuration file
    and a data file  with  column headers and genotype records for
    analysis. We refer to  these  with  the  extensions
    <filename>.ini</filename> and <filename>.pop</filename>,
    respectively, although different  extension  names  can be used.
    Both of these are plain text files.</para>

   <para>The  format  for  the  data  file is three lines of header
    information (discussed below) followed by tab-delimited genotypic
    data. As long as this  basic  format  is  followed,  PyPop can
    analyze genotype data of practically any type.</para>

   <para>The  flexibility of the system lies in the matching of a
    configuration file  with  the  data  file.   The data file may
    contain genotype data consisting of loci, microsatellites,
    haplotypes, SNPs, etc. As long as the  column  labels  in  the
    data file are matched with entries in the appropriate  section  of
    the  configuration  file, the data may be of several different
    types.</para>

   <bridgehead renderas="sect3">Data file</bridgehead>

   <para>The  data file should consist of three header lines, followed
    by lines of  genotype  data.  The  program  uses the TAB character
    as the field separator so that spaces may be embedded in the
    fields. Such a file is easily  exported  from  a  spreadsheet or
    database program. No entries defined  in the configuration file
    may be left blank in the population file, with the exception of
    the omission of an entire locus (or loci). An abbreviated sample
    data file is shown below.   </para>

   <programlisting>labcode	method	ethnic	contin	collect	latit	longit	complex <co id="line1"/>
USAERL  SSOP    Irish   Europe  Dublin  30 deg  350 deg 1 <co id="line2"/>
populat id	a_1	a_2	c_1	c_2	b_1	b_2	tap1_1	tap1_2 <co id="line3"/>
   </programlisting>

   <calloutlist>
    <callout arearefs="line1" id="line1-co" xreflabel="line1">
     <formalpara>
      <title>Header line 1</title>

      <para>The first line should contain the column headers for
       general information common to all the records in the file, such
       as population name, ascertainment and typing methods, and so
       forth.  What it contains is up to the user. These labels must
       be duplicated exactly in the appropriate section of the
       configuration file.</para>

     </formalpara>
    </callout>
    <callout arearefs="line2">
     
     <formalpara>
      <title>Header line 2</title> 
      <para>The second line contains the information for the labels
       given  on the first line. These are the values for the labels
       that are specific to the user's population sample.</para>
     </formalpara>

<!--     
     <para>The <literal>method</literal> should be one of the
      following:</para> 
     <literallayout format="linespecific">SSOP RLS SBT SSP RSCA MS
      (this is for PCR/gel sizing for microsatellites) RFLP SSCP Other
     </literallayout>
     
     <para>The <literal>ethnic</literal> field may contain practically
      anything, but the <literal>contin</literal> field should contain
      one of the following geographic regions:</para>
     <literallayout>
      North-Africa Sub-Saharan-Africa North-East-Asia South-East-Asia
      South-West-Asia Australia Europe North-America Oceania
      South-America Other
     </literallayout>
      
     <para>The <literal>collect</literal> field is for where the data
      was collected, <literal>latit</literal> and
      <literal>longit</literal> are for the latitude and longitude
      (approximately) of origin, and <literal>complex</literal> should
      be entered as a zero.</para>
-->

    </callout>
    <callout arearefs="line3">
     <formalpara>
      <title>Header line 3</title>
      <para>The  third line contains the labels for the genotype
       records  that  will follow. This line should consist of two
       identifier labels  followed  by  the names of the loci (or
       microsatellites, SNPs, etc.).  The  first identifier label is
       the population name (populat in the example). The second is an
       identifier label for individuals in the sample  (id  in  the
       example). Each locus must be named twice, with a suffix
       indicating  which  instance  of  the locus is contained in the
       column  below. Note that PyPop is designed for analyzing
       genotype data in which phase is not known.
      </para>
     </formalpara>

<!--      
     <para><literal>populat</literal> should contain a name for the
      population and <literal>id</literal> should contain a sample
      id.</para>
     
     <para> There should be two header labels for each locus, giving
      the name of the locus, in lower case please, followed by an
      underscore and a one (1) or a two (2), so that each column name
      is unique.</para>
     
     <para>From <phrase role="strong">line 4</phrase> onwards, the
      file should contain genotype data, all tab-separated, with no
      blanks and a string of four asterisks indicating untyped
      loci.</para>
     
     <para><emphasis role="bold">VERY IMPORTANT</emphasis>, a
      homozygote should include entries for both alleles i.e.,
      <literal>DRB1</literal> <literal>0407</literal> should have
      <literal>0407</literal> entered TWICE, the other allele should
      NEVER be left blank, indicated by a dash, or in any way assumed,
      otherwise they cannot be differentiated from ambiguous typing
      results.</para>
     
     <para>There should be no trailing blank lines at the end of a
      file.</para>
-->
 
    </callout>
   </calloutlist>

   <bridgehead renderas="sect3">Configuration file</bridgehead>

   <para>Entries in the configuration file are of three types:</para>

   <orderedlist>
    <listitem>
     <para>A  comment line, indicated by a pair of semicolons at the start of
      the line.</para>
    </listitem>
    <listitem>
     <para>A  label  in square brackets that indicates a section
      header for a particular test or condition. If it is not
      commented out the indicated test will be performed.</para>
    </listitem>
    <listitem>
     <para>A  setting  that  specifies  values  for  parameters,  of
      the form <sgmltag>setting</sgmltag>=<sgmltag>value</sgmltag>.
      Such an entry may span more than one line.</para>
     <para>
      Any  setting  can be reset to its default, and any test can be
      skipped by  inserting a pair of semicolons at the start of the
      line that would otherwise call it.  These lines also contain the
      descriptions of how a setting  should  be  formatted  and  used.
      A  sample  excerpt  from a configuration  file  corresponding
      to  the  sample data file is given below.</para>
    </listitem>
   </orderedlist>
   <programlisting>[ParseFile]
;; valid fields as they appear in the header block of the data file

validPopFields=labcode
 method
 ethnic
 collected

;; designates the string to be used for missing data
untypedAllele=****

;; designates field name that holds the population name
popNameDesignator=+

;; designates field names that hold allele names
alleleDesignator=*

;; valid fields for the genotype data block of the data file
validSampleFields=+populat
 id
 *a_1
 *a_2
 *c_1
 *c_2
 *b_1
 *b_2
 *dra_1
 *dra_2
 *drb1_1
 *drb1_2

[HomozygosityEWSlatkinExact]
;; use  this  section  to  run  the Monte Carlo approximation to the
;; Slatkin exact Ewens-Watterson test

numReplicates=100000
...
   </programlisting>

   <para>The correspondence between the data file and the
    configuration file is established  in the
    <literal>ParseFile</literal> section of the configuration file.
    The terms  listed  after <literal>validPopFields</literal> must be
    the same as those listed on  the first header line of the data
    file. The <literal>untypedAllele</literal> can be a single
    character  or a string of characters and must match what is used
    in the <filename>.pop</filename> file.</para>

   <para>The <literal>popNameDesignator</literal> and
    <literal>alleleDesignator</literal> strings are internal to the
    configuration  file.  They  indicate  the prefix used to identify
    which  field  names,  listed  under
    <literal>validSampleFields</literal>, contain the respective
    information. Finally,  the
    <literal>HomozygosityEWSlatkinExact</literal> section  header
    label requests this test to be done with a setting of 100,000
    replicates.   </para>

  </sect2>
  
  <sect2 id="pypop:data-interchange-transmission">
   <title>Data transmission</title>
   
   <para>Possible methods:</para>
   
   <orderedlist>
    <listitem>
     <para>e-mail the data files.</para>
    </listitem>
    
    <listitem>
    <para>You log in to our server via <command>[s]ftp</command>
      and upload the text files, alerting us by e-mail.</para>
    </listitem>
    
    <listitem>
     <para>You alert us by e-mail when new data is available, and we
     log in to your server via <command>[s]ftp</command> and download
     the text files.</para>
    </listitem>
   </orderedlist>
  </sect2>
 </sect1>
</appendix>