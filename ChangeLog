2003-12-12  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* config.ini ([allPairwiseLDWithPermu]): Change semantics of
	command, this is no longer a boolean variable but an integer
	specifiying how many permutations we will.  If it is nonzero, the
	default) or then permutations are enabled and the number of
	permutations specified in the option is used.  If the flag is
	ommited or zero, then no permutation testing is done.
	([numPermuInitCond]): New .ini file option: Number of initial
	conditions used if permutation test is run default is to 5 (this
	parameter is only used if 'allPairwiseLDWithPermu' is set and
	nonzero).
	
	* Main.py (Main._doGenotypeFile): Parse 'allePairwiseLDWithPermu'
	as an integer, rather than a boolean.  If set to zero, then this
	has the effect of the old permutationFlag=0, but the number is now
	used as the number of permutations we wish to run (Default 1001).
	Update LOG message with number of permutations to be run.  Pass
	allPairwiseLDWithPermu as the new numPermutations keyword to Haplo
	class invocation.
	Parse new '.ini' option. 'numPermuInitCond', an integer which is
	the number of initial conditions used per permutation run (default
	to 5).  Pass to allPairwise() method call.

	* Haplo.py (Emhaplofreq._runEmhaplofreq): Add two new keyword
	parameter to method: 'numPermutations': sets number of
	permutations that will be performed if 'permutationFlag' *is*
	set.  [Default: 1001]. 'numPermuInitConds': sets number of initial
	conditions tried per-permutation.  [Default: 5].  Pass these
	parameters on to the main_proc invocation from shared library.
	(Emhaplofreq.allPairwise): Change parameter name from a boolean
	permutationFlag -> numPermutations (integer).  Use in place
	throughout, pass to _runEmhaplofreq.  Internal permutationFlag set
	to zero if numPermutations = 0.
	(Emhaplofreq.allPairwise): Add new keyword parameter:
	'numPermuInitCond', no default.  Pass through to _runEmhaplofreq.

2003-12-10  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* standalone.spec: When generating standalone version, VERSION file 
	is now placed in dist_dir/bin where pypop script now looks for it.

	* pypop.py: Relocated and streamlined 'VERSION' finding code.  The
	logic is now to find our exactly which directory the current pypop
	script is being run: 1) First, check to see if we are running from
	the system-installed location and not in the 'frozen' standalone
	state; 2) if not, assume VERSION is in the same directory where
	the script is located; 3) finally check to see if the VERSION file
	exists, if not, exit with an error message.
	Pass the version variable to the Main() class instance.
	Add new command line option "-V", long version "--version" to
	report the current version.  When passed simply exit with the
	version_message.  
	(usage_message): Mention it.
	(copyright_message): Copyright boilerplate.
	(interactive_message, version_message): New messages, version
	message outputs the version and the copyright_message,
	interactive_message also outputs version and copyright_message

	* Main.py (Main.__init__): Add new keyword 'version' to
	constructor, version information is now passed into the class, not
	generated within.  Make version an instance variable throughout.
	Move code to find the 'VERSION' file and the version information
	to the main 'pypop.py' script.
	Fixed 'self.config.ini' -> 'config.ini' in altpath construction.

2003-12-08  Owen Solberg  <solberg AT socrates.berkeley.edu>

	* RandomBinning.py: Changed import to use copy instead of
	deepcopy. Copy should be sufficient and is probably less
	intensive.  
	Importing Homozygosity module so we can use the new classless
	method contained therein.
	(RandomBinsForHomozygosity): Removed 'Exact' from name of class.
	(RandomBinsForHomozygosity.__init__): Removed setup of
	EWSlatkinExact object.
	(RandomBinsForHomozygosity.randomMethod): Changing printed
	output to reflect absence of EWSlatkinExact test results.
	Deepcopy changed to copy.
	Homozygosity calculation is obtained by calling new method in
	Homozygosity module.
	(RandomBinsForHomozygosity.sequenceMethod): Changes as above for
	randomMethod.

	* Main.py: Changed import to reflect changed class name in
	RandomBinning module.
	(Main._doGenotypeFile): As above, reflects changed class name.

	* Homozygosity.py (getObservedHomozygosityFromAlleleData): New
	method to calculate observed homozygosity from a list of allele
	counts.  This may want to be folded in to the similar method that
	already exists in class Homozygosity, but that may require
	retooling the class a bit.
	(HomozygosityEWSlatkinExact.doCalcs): Cosmetic improvement for the
	construction of li, the list of allele counts that gets passed to
	the EWSlatkinExact object.

2003-12-06  Owen Solberg  <solberg AT socrates.berkeley.edu>

	* Filter.py (AnthonyNolanFilter.makeSeqDictionaries): Any missing
	sequence data is replaced with an asterisk prior to returning the
	polyseq dictionary.
	Approach to checking for polymorphic positions is more robust.

	* Main.py: Changed imports to reflect new RandomBinning interface.
	(Main.__init__): Move randomBinningFlag initialization to
	beginning of method.
	(Main._runFilters): Fixed faulty exception statement -
	anthonyNolanPath -> alleleFileFormat.
	(Main._doGenotypeFile): Added if statement to check to see if
	random binning will actually be possible (ie, if the target number
	of bins must be less than the initial number of bins.)
	Removed randomHomozygosities list initialization, since the
	Homozygosity module is called from RandomBinning now.

	* RandomBinning.py: Import Homozygosity module.
	(RandomBinsForHomozygosityExact): Renamed class from
	RandomAlleleBinning.
	Refactoring so that the class will run the homozygosity test for
	each random binning result, immediately after producing it.
	Formated printed output mainly for testing. [Later output will be
	part of the XML stream.]
	(RandomBinsForHomozygosityExact.__init__): Added keywords to
	constructor needed for running Homozygosity test from within
	module.
	Created object for HomozygosityEWSlatkinExact test.
	(RandomBinsForHomozygosityExact.sequenceMethod): Changed method so
	that only random binnings that meet the target number of bins
	exactly are accepted.  Infinite loops are prevented by opting out
	if the number of failed attempts is greater than 10 times the
	number of desired results.

	* Homozygosity.py (HomozygosityEWSlatkinExact.doCalcs): Changed
	_doCalcs to doCalcs (to make method public).
	(HomozygosityEWSlatkinExact.serializeHomozygosityTo): Calling
	doCalcs.

2003-12-05  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* setup.py (ext_Emhaplofreq): Add "depends" for module on
	'emhaplofreq/emhaplofreq.h'.  Only enable this for Python > 2.1,
	[feature added in 2.2 or 2.3].
	(ext_Pvalue, ext_Gthwe): Likewise for pval/*.h and gthwe/*.h
	files.

2003-12-05  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* pypop.py (usage_message): Add new "-o", "--outputdir" option to
	allow user to specify alternative directory for output and pass
	through to invocation of Main. If directory does not exist, exit
	with an error.  Replace getXmlOutFilename -> getXmlPath and
	likewise for getTxtOutFilename -> getTxtOutPath.
	
	* Main.py (Main.__init__): Add new parameter outputDir for
	allowing different output directories and set as instance
	variable.  If set, prepend outputDir
	to {xmlOut,txtOut,defaultFilterLog}Filename to create
	corresponding {xmlOut,txtOut,defaultFilterLog}Path variables.
	Use them in all "open()" functions.
	(Main._genTextOutput): Likewise.
	(Main.getXmlOutPath): Rename from getXmlOutFilename.
	(Main.getTxtOutPath): Likewise for getTxtOutPath.

2003-11-26  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* Main.py (Main.__init__): Moved filterLogFile creation to the
	first if statement to check for the presence of the '[Filters]'
	section in the configuration file, so that when _runFilters is
	reached the file exists at that point.

	* Utils.py (StringMatrix.__setitem__): Remove ugly hack to that
	appended a colon to each item in StringMatrix.
	(StringMatrix.filterOut.f): Remove colon check.
	(appendTo2dList): New function to append a given string to each
	element in a two 2d list (i.e. a list of lists).
	(__main__): Tweak test harness.

	* Haplo.py: Import new function appendTo2dList from Utils.py
	(Emhaplofreq._runEmhaplofreq): Use it to add colon ':', when
	generating the subMatrix to pass to the Emhaplofreq module.
	Remove the truncation from the debug message as well.

	* DataTypes.py (Genotypes._genDataStructures): Remove FIXME hack
	for Utils.py, don't need to lop-off trailing colon.

	* Filter.py (AnthonyNolanFilter.doFiltering): Likewise
	(AnthonyNolanFilter.makeSeqDictionaries): Likewise.
	(AnthonyNolanFilter.translateMatrix): Likewise.
	(BinningFilter.doDigitBinning): Likewise.

2003-11-26  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* Main.py (Main.__init__): Set randomBinningFlag instance variable
	to off (0) by default, so it always exists.
	Move the creation of the filterLogFile to same place that the
	inline XML pointing to the filter log is created.
	Close log file *after* running _do*File() methods moving it here,
	means that the open and close are at the same level and are called
	in the same method.
	(Main._runFilters): Move setting of randomBinningFlag to __init__
	Likewise for filterLogFile open() and close().

2003-11-26  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* Utils.py (StringMatrix.copy): Don't forget to copy the internal
	array too!
	(__main__): Modify test harness slightly.

2003-11-25 Owen Solberg  <solberg AT socrates.berkeley.edu>
	
	* Homozygosity.py: Import add from operator.
	(Homozygosity.getObservedHomozygosity): Change to reflect new data
	structure above.
	(HomozygosityEWSlatkinExact.__init__): Likewise change interface.
	(HomozygosityEWSlatkinExact._doCalcs): New method, split out from
	__init__ so we can reuse the object with new alleleData without
	having to instantiate a new instance.  Move extraction of data
	from wrapper from serializeHomozygosityTo method into new instance
	variables, so we can return data outside the stream context.
	(HomozygosityEWSlatkinExact.getHomozygosity): Return data as a
	tuple, acquired in _doCalcs.
	(HomozygosityEWSlatkinExact.serializeHomozygosityTo): Call
	_doCalcs as per old interface.
	(HomozygosityEWSlatkinExact.serializeHomozygosityTo): Populate
	XML stream with data from new instance variables .
	(Homozygosity.__init__): Change interface: now takes
	alleleData (list of counts), directly, avoids having to unpack
	data structure.

	* config.ini ([Filters]): New section, new 'filtersToApply' option
	can specifiy arbitrary filters, that each have their own section.
	([Filter1], [Filter2]): Sample configs for AnthonyNolan and
	DigitBinning filter, respectively.
	([Sequence]): New section, sample configuration for translating
	alleles and running entire analysis at sequence level (if section
	not present, won't do this).
	([RandomAlleleBinning]): New section to configure behaviour of
	random binning.

	* RandomBinning.py: New file.  
	(RandomAlleleBinning): New class to handle creation of random
	binning code in modular fashion.

	* Filter.py: Import deepcopy from copy.
	(AnthonyNolanFilter): Doc string.
	(AnthonyNolanFilter.__init__): New keyword options:
	alleleFileFormat (default: 'msf'), and alleleDesignator (default:
	'*'), sequenceFileSuffix ('_prot') for handling different kind of
	data.
	Handle MSF files in addition to text ones..
	Don't call self.cleanup (may need to write more to the log file).
	(AnthonyNolanFilter.makeSeqDictionaries): New method, split out
	from __init__ to make the the sequence dictionary creation
	externally available.
	(AnthonyNolanFilter.translateMatrix): New method, likewise split
	out from __init__.
	(AnthonyNolanFilter._getSequenceFromLines): New method to get
	sequence for MSF files.
	(AnthonyNolanFilter._getConsensusFromLines): New method, gets
	consensus sequences.
	(BinningFilter): Reworked the BinningFilter class.  Handles
	digitBinning, comment out old CustomBinning for the moment, it is
	broken against new interface.

	* Main.py: From Filter, import MSFilter.
	(getUserFilenameInput): Fix doc string.
	(Main.__init__): Make defaultFilterLogFile an instance variable.
	(Main.__init__): Likewise for alleleDesignator.
	(Main.__init__): Completely refactor filtering: we now look for a
	'[Filter]' section in the .ini file.  We can concatenate these
	filters arbitrarily and each successive matrix is saved.  We run
	filters just before we create the Genotypes matrix.  Remove
	useAnthonyNolanFilter option from [ParseGenotypeFile].
	Moved filterLog file creation out of AnthonyNolanFilter to here.
	(Main._runFilters): New method, which implements the checking of
	filters.  To emulate old filters we have some sensible defaults,
	"AnthonyNolan" will behave like the old filter, and obviates the
	need for a special "flag" in [ParseFile].  Filters that can
	currently be used are: AnthonyNolanFilter (can use the MSF format
	for parsing), DigitBinning, CustomBinnning, or Sequence (to
	translate in a nucleotide or amino-acid sequence).
	(Main._doGenotypeFile): Handle the change to the interface for
	Homozygosity object, currently only requires the list of count
	values, not the whole dictionary.  
	Implement preliminary code for doing randomized "binning": both in
	the truly random and "phylogenetically informed" way.
	FIXME: Close the filterLog file here (currently broken if no
	filters are used).

2003-11-25  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* Start ChangeLog.
