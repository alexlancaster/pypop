2004-06-30  Alex Lancaster  <alexl AT berkeley.edu>

	* HardyWeinberg.py (HardyWeinbergGuoThompson.dumpTable): Call new
	SWIG function in _Gthwe module, _Gthwe.run_randomization(), now
	split out from run_data MCMC code.  Still need to XML-ify output.

2004-06-23  Alex Lancaster  <alexl AT berkeley.edu>

	* HardyWeinberg.py (HardyWeinbergGuoThompson.dumpTable): Fixed
	erroneous value being passed to _Gthwe.run_data().  The total
	number of *genotypes* (k*(k+1)/2) was being passed as the 'total'
	parameter, rather than the total number of *gametes* (N).  This
	has now been corrected.  This did not affect the MCMC results.

2004-05-19  Alex Lancaster  <alexl AT berkeley.edu>

	* setup.py (ext_Gthwe): Add PERMU_TEST macro to be true ('1') for
	the moment.

	* HardyWeinberg.py (HardyWeinbergGuoThompson.dumpTable): Remove
	obsolete definition of n for gthwe module (should be an array, not
	an integer).  When creating the array of zeroes, make it length of
	self.k (number of distinct alleles), rather than hardcoded at
	35 (since that limitation has been removed in the actual module).

2004-05-17  Alex Lancaster  <alexl AT berkeley.edu>

	* setup.py (my_build_ext.swig_sources): Comment out setting of
	CFLAGS to -funroll-loops, causes floating-point number operation
	instability.  See post here:
	http://www.oonumerics.org/MailArchives/oon-list/msg00740.php.
	(ext_Gthwe): Added libraries to compile with "gsl" and "gslcblas"
	for GNU Scientific Library (GSL), this has to be hardcoded for the
	moment, as can't compile it as a standalone module as yet.
	Set DEBUG C pre-processor flag to 1.

	* HardyWeinberg.py (HardyWeinbergGuoThompson.dumpTable): Added
	debug message for sortedAlleles.  More debug information and
	flush() sys.stdout.

2004-03-09  Alex Lancaster  <alexl AT berkeley.edu>

	* Utils.py (getUserFilenameInput): Comment out test code for the
	moment.

	* standalone.spec: execfile Utils.py in globals() namespace rather
	than locals().
	(createWrappers): convertLineEndings() for the various wrapper
	scripts when running on Win32.

	* NEWS: Update with fix. Release 0.5.2
	
2004-03-04  Alex Lancaster  <alexl AT berkeley.edu>

	* setup.py (py_modules): Add missing RandomBinning.py file.
	Thanks to Hazael Maldonado Torres for the bug report.

	* NEWS: Updated with this fix.

2004-02-26  Alex Lancaster  <alexl AT berkeley.edu>

	* popmeta.py (popmetabinpath): Improve heuristics to find 'xslt'
	subdirectory.

	* NEWS: Update with popmeta.py addition and release date.

	* MANIFEST.in: Add allelelist-by-locus.xsl haplolist-by-group.xsl
	to distribution.

	* standalone.spec (xslt_dir): Likewise.  Fix typo in batch file
        generation under Windows.

2004-02-17  Alex Lancaster  <alexl AT berkeley.edu>

	* standalone.spec (createWrappers, createObjects):
	Refactor/separate out common code to create scripts and wrappers.
	Add popmeta.py to scripts to generate standalone executables.

	* Utils.py (checkXSLFile, getUserFilenameInput): Moved from
	Main.py.

	* Main.py (checkXSLFile, getUserFilenameInput): Move to Utils.py
	and import from there.

2004-02-12  Owen Solberg  <solberg@localhost.localdomain>

	* Main.py (Main.__init__): Generate filename for pop file dump, to
	be used if option is called.  Generate path for pop file dump by
	appending the path.
	(Main._runFilters): General cleanup of pop file dump code.
	Renaming variables, making code more readable.

2004-02-11  Owen Solberg  <solberg@localhost.localdomain>

	* Filter.py: Import add from operator, for use in the tallying of
	residues/nucleotides in sequence filter logging.
	(AnthonyNolanFilter.translateMatrix): Adding comments and
	improving readability of code for sequence filter logging.

	* Main.py (Main.__init__): Look for option makeNewPopFile in the
	Filters section of the ini file.  This is a digit that specifies
	any point in the chain of filters where the user wants to have the
	data structure saved back to disk in the pop format.
	(Main._runFilters): After running all the filters and building the
	matrixHistory list, this method now checks to see if the user
	asked to have any one of the filter stages saved to disk.

2004-02-10  Owen Solberg  <solberg@localhost.localdomain>

	* Filter.py (AnthonyNolanFilter.checkAlleleName): Sequence
	translation filter now produces raw text dump to the filter xml
	file, summarizing polymorphic positions of each allele.

2004-02-09  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* xslt/emhaplofreq.xsl: (emhaplofreq): Don't forget to output the
	<group mode="LD"/> output, for specified LD estimates.
	
	* NEWS: Start collecting Release Notes for version 0.5.1.
	
	* config.ini [Emhaplofreq]: New parameter 'numInitCond': number of
	initial conditions used before performing permutations. Default to
	50.

	* Haplo.py (Emhaplofreq._runEmhaplofreq): Accept new parameter
	numInitConds: sets number of initial conditions before performing
	the permutation test. Default: 50.  Pass through to SWIG wrapper
	call main_proc().
	(Emhaplofreq.estHaplotypes): Accept new parameter numInitCond,
	pass to _runEmhaplofreq.
	(Emhaplofreq.estLinkageDisequilibrium): Likewise, but also set
	numPermutations, numPermuInitCond to 'None', should be initialized
	by Main.
	(Emhaplofreq.allPairwise): Likewise.

	* Main.py (Main._doGenotypeFile): Parse new [Emhaplofreq] option
	'numInitCond', so that the number of initial conditions for the
	first iteration LD calculation (and therefore haplotype
	estimation) is user-configurable.  Default to 50.
	Add more verbose messages for telling user what is going on with
	haplotype estimation.
	Send 'numInitCond' to Haplo.estHaplotypes() method invocation.
	Likewise pass 'numInitCond' to Haplo.allPairwise() call.
	Likewise for Haplo.estLinkageDisequilibrium(), pass numInitCond,
	numPermutations, numPermuInitCond.
	Remove diagnostics that may erroneously imply an error to the
	user (if nothing is wrong, don't say anything).

2003-12-30  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* config.ini (directory): Remove all leading hardcoded
	'/home/solberg' from paths in filters.  For the purposes of this
	demo file, assume paths are relative to ~/ihwg/src.

	* NEWS: Note "missing <prefix>" message suppression.

	* standalone.spec: Set PYTHONHOME in both sh and DOS wrapper
	scripts so that standalone executable stops whining about missing
	prefix and exec_prefix.
	Refactor wrapper script and .bat file generation so that common
	options are set in one place.

2003-12-29  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* NEWS (PyPop 0.5): Start adding release notes for public release.
	Note new wrapper changes.
	
	* standalone.spec (pypop-batch.bat): Mirror Linux batch wrapper
	script for DOS [Win9*,2k,NT,XP] binary.
	(pypop.bat): Add a "pause" statement in DOS .bat file so that DOS
	window doesn't disappear when interactive script finishes, will
	now wait for user to press a key.
	Remove '.sh' prefix from all Linux wrapper scripts, now use
	'#!/bin/sh' to indicate to file(1) that it is a shell-script.
	
	* Makefile (NAME_BIN): Make uname test for "CYGWIN_NT" work for
	both 5.0 [Win2k] and XP [5.1].

	* Main.py (getConfigInstance): Remove obsolete code and unused
	'specifiedConfigFile' variable.

2003-12-24  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* standalone.spec: For Linux, add LD_LIBRARY_PATH variable to
	wrapper scripts so that distributed shared libraries get used
	*before* system libraries.
	Generate pypop-batch.{sh,bat} wrapper scripts at top-level for
	users for both Win32 and Linux.

2003-12-19  Owen Solberg  <solberg AT socrates.berkeley.edu>

	* Main.py (Main._runFilters): Parse the ini file for "directory"
	and "file" rather than "path."
	Change the way CustomBinning is called to account for changes in
	that method.
	
	* Filter.py (BinningFilter.__init__): Receive the binningPath when
	this object is instantiated.
	(BinningFilter.doCustomBinning): Modularized this method so that
	it can be called in line with the other filters.  Method now looks
	for custom binning specifications in a single file, specified in
	the CustomBinning section of the ini file using the file option.

	* config.ini: For greater user clarity, paths which are
	directories are now indicated by the option "directory" and paths
	which are files by "file."

2003-12-19  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* standalone.spec: Include NEWS file in standalone binary.

	* MANIFEST.in: Add NEWS to manifest.

	* NEWS: New file. Contains "Release Notes": contains user-visible
	changes to PyPop.

	* ParseFile.py (ParseGenotypeFile._genInternalMaps): Fix logic
	when checking for the existence of a column for the population
	name, test for the presence of "None", because if 'popNameCol' is
	'0' (rather than a positive integer), then the test
	will (erroneously) ignore the column and won't set the population
	name correctly.

2003-12-17  Owen Solberg  <solberg AT socrates.berkeley.edu>

	* RandomBinning.py (RandomBinsForHomozygosity.sequenceMethod):
	Major retooling enables this method to keep track of each position
	in the sequence.  This is useful for debugging and may be useful
	in later applications of this method.  
	Variable names changed and comments added to improve readablity of
	code.

	* Main.py (Main.__init__): Initialize self.filteringFlag to zero.
	This flag makes it easier to coordinate the filters and filterlog.
	The filterLogFile XML output stream is initialized after checking
	that there is a Filters section in the ini file, and that the
	length of the filtersToApply is non-zero.  Immediately after
	initializing the log file, the opentag is written (the filename
	configuration has also been fixed) and the filteringFlag is set to
	one.
	(Main._doGenotypeFile): Calling the sequence-based random binning
	method now also requires the polyseqpos to be passed to it, so the
	method can tabulate statistics about each position.

	* Filter.py (AnthonyNolanFilter.__init__): Removed the XML opentag
	for the filterlog.  This is now handled by Main, as is the closing
	of the filterlog.
	(AnthonyNolanFilter.cleanup): Removed all code from this method,
	leaving pass as a placeholder.  The closing the filterlog is now
	handled by Main.

2003-12-17  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* Utils.py (TextOutputStream.flush): New method, call flush() on
	underlying file pointer.

	* Main.py (Main._doGenotypeFile): API for Emhaplofreq has changed,
	constructor now expects XML stream to be passed to it since
	serialization is now done periodically from within class to avoid
	memory overhead of in-memory string.  
	Call Emhaplofreq.serializeStart() to generate start tag after
	instantiation.  flush() current XML buffer before commencing
	calculations to make sure they are written to disk in case of
	problems.
	At end of LD/haplo est calculations, change serializeTo() ->
	serializeEnd()

	* Haplo.py: Move import of cStringIO to top-level.  Doc fixes.
	(Emhaplofreq.__init__): Constructor now expects an XML stream to
	be given as a keyword parameter.  This class has different API to
	the others because output is only available in stream
	form (i.e. it cannot be accessed programmatically through method
	calls).
	(Emhaplofreq.serializeTo): Removed method, split into
	serializeStart(), serializeEnd().  Serialization for emhaplofreq
	output is now done periodically within the _runEmhaplofreq()
	method to avoid huge overhead.
	(Emhaplofreq.serializeStart, Emhaplofreq.serializeEnd): New
	methods, perform the start and end tag as did old serializeTo()
	method.
	(Emhaplofreq._runEmhaplofreq): fp is now a local variable, not an
	instance variable and created each time method is called.
	Serialization for emhaplofreq output is now done at end of method
	to to avoid huge overhead of storing the entire string in memory
	until all emhaplofreq functions were called.  flush() self.stream
	before exiting to get all buffered output written to disk.

2003-12-17  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* config.ini ([Emhaplofreq]): Add 'permutationPrintFlag' Boolean
	option.  Determines whether the likelihood ratio for each
	permutation will be logged to the XML output file, this is
	disabled by default WARNING: if this is enabled it can
	*drastically* grow the size of the output XML file on the order of
	product of the number of possible pairwise comparisons and
	permutations.  Machines with lower RAM and disk space may have
	difficulty coping with this.

	* Main.py (Main._doGenotypeFile): Check for new [Emhaplofreq]
	Boolean option 'permutationPrintFlag', default to zero.  Add
	information that permutation info is being printed to LOG
	diagnostic. Pass through to Haplo() instance.

	* Haplo.py (Emhaplofreq._runEmhaplofreq): Add new keyword
	parameter 'permutationPrintFlag': sets whether the result from
	permutation output run will be included in the output XML.
	Default: 0 (disabled).  Pass through to the SWIG wrapper.
	(Emhaplofreq.allPairwise): Likewise add a matching keyword
	parameter (default 0) and pass through to Main._runEmhaplofreq().
	(Emhaplofreq.allPairwiseLD, allPairwiseWithPermu): Comment-out,
	currently deprecated interface.

2003-12-16  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* pypop.py: Move import of getUserFilenameInput to top-level, add
	checkXSLFile import.
	(xslFilename): Call Main.checkXSLFile() if xsl file is supplied as
	a command-line option ("-x", "--xsl")
	(xslFilenameDefault): Add heuristics to look for
	xslFilenameDefault, in case command-line option was not set.
	Heuristics may return a valid path or None (but xslFilenameDefault
	here is *always* overriden by command-line option or .ini file
	setting).  1) check datapath if it run from a 'system'
	installation in sys.prefix and NOT in a 'frozen' state.  2) check
	child directory 'xslt/' of script location first.  3) if not found
	here check sibling directory '../xslt/'
	Pass in xslFilenameDefault to Main() contructor call. 

	* Main.py (checkXSLFile): New function to check existence of xsl
	file, given a path, subdirectory, and filename, generate the
	canonical path and check its existence and return it, return
	'None' or abort with an error, depending on abort keyword
	setting (default is not to abort).
	(Main.__init__): Add keyword argument xslFilenameDefault to use if
	not set by either command line option or '.ini' file.
	(Main.__init__): Heuristics for checking XSL file have been moved
	here and are checked before main loop.  Now we only use
	xslFilenameDefault if not passed in via xslFilename or .ini file
	is set.  xslFilename set (i.e. command-line option was used)
	always takes precedence to .ini file.
	(Main.__init__): Removed obsolete setting of altpath.
	(Main._genTextOutput): Move heuristics for checking .ini file
	options to __init__.
	(Main._doGenotypeFile): A value of '1' is not permitted for
	'allPairwiseLDWithPerm' option. It is no longer a boolean variable
	to enable the permutation test.  It should now contain the NUMBER
	of permutations desired.  Exit with an error message.
	
2003-12-12  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* config.ini ([allPairwiseLDWithPermu]): Change semantics of
	command, this is no longer a boolean variable but an integer
	specifiying how many permutations we will.  If it is nonzero, the
	default) or then permutations are enabled and the number of
	permutations specified in the option is used.  If the flag is
	ommited or zero, then no permutation testing is done.
	([numPermuInitCond]): New .ini file option: Number of initial
	conditions used if permutation test is run default is to 5 (this
	parameter is only used if 'allPairwiseLDWithPermu' is set and
	nonzero).
	
	* Main.py (Main._doGenotypeFile): Parse 'allePairwiseLDWithPermu'
	as an integer, rather than a boolean.  If set to zero, then this
	has the effect of the old permutationFlag=0, but the number is now
	used as the number of permutations we wish to run (Default 1001).
	Update LOG message with number of permutations to be run.  Pass
	allPairwiseLDWithPermu as the new numPermutations keyword to Haplo
	class invocation.
	Parse new '.ini' option. 'numPermuInitCond', an integer which is
	the number of initial conditions used per permutation run (default
	to 5).  Pass to allPairwise() method call.

	* Haplo.py (Emhaplofreq._runEmhaplofreq): Add two new keyword
	parameter to method: 'numPermutations': sets number of
	permutations that will be performed if 'permutationFlag' *is*
	set.  [Default: 1001]. 'numPermuInitConds': sets number of initial
	conditions tried per-permutation.  [Default: 5].  Pass these
	parameters on to the main_proc invocation from shared library.
	(Emhaplofreq.allPairwise): Change parameter name from a boolean
	permutationFlag -> numPermutations (integer).  Use in place
	throughout, pass to _runEmhaplofreq.  Internal permutationFlag set
	to zero if numPermutations = 0.
	(Emhaplofreq.allPairwise): Add new keyword parameter:
	'numPermuInitCond', no default.  Pass through to _runEmhaplofreq.

2003-12-10  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* standalone.spec: When generating standalone version, VERSION file 
	is now placed in dist_dir/bin where pypop script now looks for it.

	* pypop.py: Relocated and streamlined 'VERSION' finding code.  The
	logic is now to find our exactly which directory the current pypop
	script is being run: 1) First, check to see if we are running from
	the system-installed location and not in the 'frozen' standalone
	state; 2) if not, assume VERSION is in the same directory where
	the script is located; 3) finally check to see if the VERSION file
	exists, if not, exit with an error message.
	Pass the version variable to the Main() class instance.
	Add new command line option "-V", long version "--version" to
	report the current version.  When passed simply exit with the
	version_message.  
	(usage_message): Mention it.
	(copyright_message): Copyright boilerplate.
	(interactive_message, version_message): New messages, version
	message outputs the version and the copyright_message,
	interactive_message also outputs version and copyright_message

	* Main.py (Main.__init__): Add new keyword 'version' to
	constructor, version information is now passed into the class, not
	generated within.  Make version an instance variable throughout.
	Move code to find the 'VERSION' file and the version information
	to the main 'pypop.py' script.
	Fixed 'self.config.ini' -> 'config.ini' in altpath construction.

2003-12-08  Owen Solberg  <solberg AT socrates.berkeley.edu>

	* RandomBinning.py: Changed import to use copy instead of
	deepcopy. Copy should be sufficient and is probably less
	intensive.  
	Importing Homozygosity module so we can use the new classless
	method contained therein.
	(RandomBinsForHomozygosity): Removed 'Exact' from name of class.
	(RandomBinsForHomozygosity.__init__): Removed setup of
	EWSlatkinExact object.
	(RandomBinsForHomozygosity.randomMethod): Changing printed
	output to reflect absence of EWSlatkinExact test results.
	Deepcopy changed to copy.
	Homozygosity calculation is obtained by calling new method in
	Homozygosity module.
	(RandomBinsForHomozygosity.sequenceMethod): Changes as above for
	randomMethod.

	* Main.py: Changed import to reflect changed class name in
	RandomBinning module.
	(Main._doGenotypeFile): As above, reflects changed class name.

	* Homozygosity.py (getObservedHomozygosityFromAlleleData): New
	method to calculate observed homozygosity from a list of allele
	counts.  This may want to be folded in to the similar method that
	already exists in class Homozygosity, but that may require
	retooling the class a bit.
	(HomozygosityEWSlatkinExact.doCalcs): Cosmetic improvement for the
	construction of li, the list of allele counts that gets passed to
	the EWSlatkinExact object.

2003-12-06  Owen Solberg  <solberg AT socrates.berkeley.edu>

	* Filter.py (AnthonyNolanFilter.makeSeqDictionaries): Any missing
	sequence data is replaced with an asterisk prior to returning the
	polyseq dictionary.
	Approach to checking for polymorphic positions is more robust.

	* Main.py: Changed imports to reflect new RandomBinning interface.
	(Main.__init__): Move randomBinningFlag initialization to
	beginning of method.
	(Main._runFilters): Fixed faulty exception statement -
	anthonyNolanPath -> alleleFileFormat.
	(Main._doGenotypeFile): Added if statement to check to see if
	random binning will actually be possible (ie, if the target number
	of bins must be less than the initial number of bins.)
	Removed randomHomozygosities list initialization, since the
	Homozygosity module is called from RandomBinning now.

	* RandomBinning.py: Import Homozygosity module.
	(RandomBinsForHomozygosityExact): Renamed class from
	RandomAlleleBinning.
	Refactoring so that the class will run the homozygosity test for
	each random binning result, immediately after producing it.
	Formated printed output mainly for testing. [Later output will be
	part of the XML stream.]
	(RandomBinsForHomozygosityExact.__init__): Added keywords to
	constructor needed for running Homozygosity test from within
	module.
	Created object for HomozygosityEWSlatkinExact test.
	(RandomBinsForHomozygosityExact.sequenceMethod): Changed method so
	that only random binnings that meet the target number of bins
	exactly are accepted.  Infinite loops are prevented by opting out
	if the number of failed attempts is greater than 10 times the
	number of desired results.

	* Homozygosity.py (HomozygosityEWSlatkinExact.doCalcs): Changed
	_doCalcs to doCalcs (to make method public).
	(HomozygosityEWSlatkinExact.serializeHomozygosityTo): Calling
	doCalcs.

2003-12-05  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* setup.py (ext_Emhaplofreq): Add "depends" for module on
	'emhaplofreq/emhaplofreq.h'.  Only enable this for Python > 2.1,
	[feature added in 2.2 or 2.3].
	(ext_Pvalue, ext_Gthwe): Likewise for pval/*.h and gthwe/*.h
	files.

2003-12-05  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* pypop.py (usage_message): Add new "-o", "--outputdir" option to
	allow user to specify alternative directory for output and pass
	through to invocation of Main. If directory does not exist, exit
	with an error.  Replace getXmlOutFilename -> getXmlPath and
	likewise for getTxtOutFilename -> getTxtOutPath.
	
	* Main.py (Main.__init__): Add new parameter outputDir for
	allowing different output directories and set as instance
	variable.  If set, prepend outputDir
	to {xmlOut,txtOut,defaultFilterLog}Filename to create
	corresponding {xmlOut,txtOut,defaultFilterLog}Path variables.
	Use them in all "open()" functions.
	(Main._genTextOutput): Likewise.
	(Main.getXmlOutPath): Rename from getXmlOutFilename.
	(Main.getTxtOutPath): Likewise for getTxtOutPath.

2003-11-26  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* Main.py (Main.__init__): Moved filterLogFile creation to the
	first if statement to check for the presence of the '[Filters]'
	section in the configuration file, so that when _runFilters is
	reached the file exists at that point.

	* Utils.py (StringMatrix.__setitem__): Remove ugly hack to that
	appended a colon to each item in StringMatrix.
	(StringMatrix.filterOut.f): Remove colon check.
	(appendTo2dList): New function to append a given string to each
	element in a two 2d list (i.e. a list of lists).
	(__main__): Tweak test harness.

	* Haplo.py: Import new function appendTo2dList from Utils.py
	(Emhaplofreq._runEmhaplofreq): Use it to add colon ':', when
	generating the subMatrix to pass to the Emhaplofreq module.
	Remove the truncation from the debug message as well.

	* DataTypes.py (Genotypes._genDataStructures): Remove FIXME hack
	for Utils.py, don't need to lop-off trailing colon.

	* Filter.py (AnthonyNolanFilter.doFiltering): Likewise
	(AnthonyNolanFilter.makeSeqDictionaries): Likewise.
	(AnthonyNolanFilter.translateMatrix): Likewise.
	(BinningFilter.doDigitBinning): Likewise.

2003-11-26  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* Main.py (Main.__init__): Set randomBinningFlag instance variable
	to off (0) by default, so it always exists.
	Move the creation of the filterLogFile to same place that the
	inline XML pointing to the filter log is created.
	Close log file *after* running _do*File() methods moving it here,
	means that the open and close are at the same level and are called
	in the same method.
	(Main._runFilters): Move setting of randomBinningFlag to __init__
	Likewise for filterLogFile open() and close().

2003-11-26  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* Utils.py (StringMatrix.copy): Don't forget to copy the internal
	array too!
	(__main__): Modify test harness slightly.

2003-11-25 Owen Solberg  <solberg AT socrates.berkeley.edu>
	
	* Homozygosity.py: Import add from operator.
	(Homozygosity.getObservedHomozygosity): Change to reflect new data
	structure above.
	(HomozygosityEWSlatkinExact.__init__): Likewise change interface.
	(HomozygosityEWSlatkinExact._doCalcs): New method, split out from
	__init__ so we can reuse the object with new alleleData without
	having to instantiate a new instance.  Move extraction of data
	from wrapper from serializeHomozygosityTo method into new instance
	variables, so we can return data outside the stream context.
	(HomozygosityEWSlatkinExact.getHomozygosity): Return data as a
	tuple, acquired in _doCalcs.
	(HomozygosityEWSlatkinExact.serializeHomozygosityTo): Call
	_doCalcs as per old interface.
	(HomozygosityEWSlatkinExact.serializeHomozygosityTo): Populate
	XML stream with data from new instance variables .
	(Homozygosity.__init__): Change interface: now takes
	alleleData (list of counts), directly, avoids having to unpack
	data structure.

	* config.ini ([Filters]): New section, new 'filtersToApply' option
	can specifiy arbitrary filters, that each have their own section.
	([Filter1], [Filter2]): Sample configs for AnthonyNolan and
	DigitBinning filter, respectively.
	([Sequence]): New section, sample configuration for translating
	alleles and running entire analysis at sequence level (if section
	not present, won't do this).
	([RandomAlleleBinning]): New section to configure behaviour of
	random binning.

	* RandomBinning.py: New file.  
	(RandomAlleleBinning): New class to handle creation of random
	binning code in modular fashion.

	* Filter.py: Import deepcopy from copy.
	(AnthonyNolanFilter): Doc string.
	(AnthonyNolanFilter.__init__): New keyword options:
	alleleFileFormat (default: 'msf'), and alleleDesignator (default:
	'*'), sequenceFileSuffix ('_prot') for handling different kind of
	data.
	Handle MSF files in addition to text ones..
	Don't call self.cleanup (may need to write more to the log file).
	(AnthonyNolanFilter.makeSeqDictionaries): New method, split out
	from __init__ to make the the sequence dictionary creation
	externally available.
	(AnthonyNolanFilter.translateMatrix): New method, likewise split
	out from __init__.
	(AnthonyNolanFilter._getSequenceFromLines): New method to get
	sequence for MSF files.
	(AnthonyNolanFilter._getConsensusFromLines): New method, gets
	consensus sequences.
	(BinningFilter): Reworked the BinningFilter class.  Handles
	digitBinning, comment out old CustomBinning for the moment, it is
	broken against new interface.

	* Main.py: From Filter, import MSFilter.
	(getUserFilenameInput): Fix doc string.
	(Main.__init__): Make defaultFilterLogFile an instance variable.
	(Main.__init__): Likewise for alleleDesignator.
	(Main.__init__): Completely refactor filtering: we now look for a
	'[Filter]' section in the .ini file.  We can concatenate these
	filters arbitrarily and each successive matrix is saved.  We run
	filters just before we create the Genotypes matrix.  Remove
	useAnthonyNolanFilter option from [ParseGenotypeFile].
	Moved filterLog file creation out of AnthonyNolanFilter to here.
	(Main._runFilters): New method, which implements the checking of
	filters.  To emulate old filters we have some sensible defaults,
	"AnthonyNolan" will behave like the old filter, and obviates the
	need for a special "flag" in [ParseFile].  Filters that can
	currently be used are: AnthonyNolanFilter (can use the MSF format
	for parsing), DigitBinning, CustomBinnning, or Sequence (to
	translate in a nucleotide or amino-acid sequence).
	(Main._doGenotypeFile): Handle the change to the interface for
	Homozygosity object, currently only requires the list of count
	values, not the whole dictionary.  
	Implement preliminary code for doing randomized "binning": both in
	the truly random and "phylogenetically informed" way.
	FIXME: Close the filterLog file here (currently broken if no
	filters are used).

2003-11-25  Alex Lancaster  <alexl AT socrates.berkeley.edu>

	* Start ChangeLog.
