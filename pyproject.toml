[tool.cibuildwheel]
skip = ["*-win32", "*_i686", "*-musllinux_*", "pp37-win_*", "pp37-macosx_*", "pp310-win_*", "pp310-macosx_*", "pp310-*linux*"]  # skip certain builds, including 32-bit, musllinux and others 
test-extras = ["test"]
test-command = "pytest -v {package}/tests"
# FIXME: add below test-command unit tests need to be saved
# "&& echo {package} && ls && tar zcvf unit_tests_output.tar.gz run_test_* && cp unit_tests_output.tar.gz {package}/wheelhouse/"

# Skip trying to test arm64 builds on Intel Macs as per
# https://cibuildwheel.readthedocs.io/en/stable/faq/#apple-silicon
test-skip = "*-macosx_arm64 *-macosx_universal2:arm64"
# don't try and install pypi packages and build from source
environment = { PIP_ONLY_BINARY=":all:" }

[[tool.cibuildwheel.overrides]]
# for latest CPython use newer manylinux image
select = "cp312-*linux*"
manylinux-x86_64-image = "manylinux_2_28"

[[tool.cibuildwheel.overrides]]
# for latest PyPy use newer manylinux image
select = "pp310-*linux*"
manylinux-x86_64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
# for CentOS-based runners, local cibuildwheel docker
before-all="yum install -y swig gsl-devel"
# GitHub runners use Ubuntu
#before-all="apt install swig libgsl-dev"

[tool.cibuildwheel.macos]
# do a per-build 'gsl' installation to force correct architecture when
# cross-compiling (https://stackoverflow.com/a/75488269)
before-build = [
  "echo ARCHFLAGS = $ARCHFLAGS", # gets the arch at build-time
  "if [[ $ARCHFLAGS == *arm64 ]]; then brew fetch --force --bottle-tag=arm64_big_sur gsl; brew reinstall $(brew --cache --bottle-tag=arm64_big_sur gsl); else brew reinstall gsl; fi"
 ]
# note that SWIG is already present on runners, no 'brew' installation neeeded

# support cross-compilation on Apple Silicon
archs = ["arm64", "x86_64"]  # don't enable "universal2" binary

[tool.cibuildwheel.windows]
# use nuget to install gsl on Windows, and manually supply paths
before-all = "nuget install gsl-msvc14-x64 -Version 2.3.0.2779"
# note that we have to repeat the global PIP_ONLY_BINARY config, because this variables overwrites previous defines
environment = { CPATH="gsl-msvc14-x64.2.3.0.2779\\\\build\\\\native", LIBRARY_PATH="gsl-msvc14-x64.2.3.0.2779\\\\build\\\\native\\\\static", PIP_ONLY_BINARY=":all:" }

[build-system]
build-backend = "setuptools.build_meta:__legacy__"
requires = ["setuptools>=42",
	    "setuptools_scm[toml]>=6.2",
	    "importlib-metadata; python_version <= '3.8'"
	    ]

