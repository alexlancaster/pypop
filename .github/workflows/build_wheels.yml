name: Build PyPop

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.rst'
      - 'CITATION.cff'
      - '.zenodo.json'
      - 'website/**'
      - '.github/workflows/documentation.yaml'
      - '.gitattributes'
  push:
    paths-ignore:
      - '**.md'
      - '**.rst'
      - 'CITATION.cff'
      - '.zenodo.json'
      - 'website/**'
      - '.github/workflows/documentation.yaml'
      - '.gitattributes'
  release:
    types:
      - published

jobs:
  skip_publish_zenodo:
    name: Non publication, Zenodo skip
    runs-on: ubuntu-latest
    # FIXME: this is the default action, the logical inverse of the
    # below "if" in publish_zenodo: a bit hacky, but it works
    if: (github.event_name == 'release' && github.event.action == 'published' && github.event.release.prerelease == false) == false
    steps:
      - name: Skip Zenodo step unless publishing release
        run: |
          echo "Not a publication release, skipping Zenodo"
          echo "github.ref: ${{ toJson(github.ref) }}"
          echo "github.event_name: ${{ toJson(github.event_name) }}"
          echo "github.event.action: ${{ toJson(github.event.action) }}"

  publish_zenodo:
    name: Production release, Zenodo publication
    runs-on: ubuntu-latest
    # "else" we *are* publishing something
    # if: github.event_name == 'release' && github.event.action == 'published' && github.event.release.prerelease == false
    if: false  # FIXME: disable until completely ready for a release
    steps:
      - name: Checkout the contents of your repository
        uses: actions/checkout@v4
        # with:
        #  token: ${{ secrets.PYPOP_RELEASE_TOKEN }}
      - name: Upsert the version in the metadata in .zenodo.json
        run: |
          echo "GITHUB_REF_NAME = $GITHUB_REF_NAME | GITHUB_REF = $GITHUB_REF | GITHUB_EVENT_PATH = $GITHUB_EVENT_PATH"
          echo "github.event.release.target_commitish = ${{ github.event.release.target_commitish }}"
          cp .zenodo.json .zenodo.orig.json
          echo "{\"version\": \"$GITHUB_REF_NAME\"}" | cat .zenodo.orig.json - | jq -s add > .zenodo.json
          rm .zenodo.orig.json
      - name: Upsert the version in the metadata in CITATION.cff
        run: |
          yq -i ".version = \"$GITHUB_REF_NAME\"" CITATION.cff
      - name: Push changes back to repo files
        run: |
          git fetch origin
          git config --global user.name ci
          git config --global user.email "username@users.noreply.github.com"
          git checkout -b $GITHUB_REF_NAME-with-upserting-changes-pre-upload
          git add .zenodo.json CITATION.cff
          git commit -m "Upserted version into CITATION.cff and into .zenodo.json"
          git checkout ${{ github.event.release.target_commitish }}
          git merge $GITHUB_REF_NAME-with-upserting-changes-pre-upload
          git push origin ${{ github.event.release.target_commitish }}
          # FIXME: removing files marked with 'export-ignore' 'set' in .gitattributes
          # before zenodraft creates the zipball using https://stackoverflow.com/a/30573319
          # to ensure that we handle filenames with potential ':' or newlines
          git ls-files -z|git check-attr --stdin -z export-ignore |sed -zne 'x;n;n;s/^set$//;t print;b;:print;x;p'|xargs --null rm
          # FIXME: need to also remove orphaned empty directories resulting from above
          find . -empty -type d -delete
          # git tag -d $GITHUB_REF_NAME
          # git push --follow-tags origin :$GITHUB_REF
          # git tag $GITHUB_REF_NAME
          # git push origin $GITHUB_REF
          # git ls-remote origin $GITHUB_REF
      - name: Create a draft snapshot of your repository contents as a new
              version in test collection on Zenodo using metadata
              from repository file .zenodo.json
        #
        # DISABLE uploading via zenodraft action, currently
        #
        # if: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # FIXME: use main one until sandbox is working
          ZENODO_SANDBOX_ACCESS_TOKEN: ${{ secrets.ZENODO_SANDBOX_ACCESS_TOKEN }}
          # ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_ACCESS_TOKEN }}
        uses: zenodraft/action@0.10.0
        with:
          collection: 1244743
          metadata: .zenodo.json
          publish: false
          # FIXME: use main one until sandbox working
          sandbox: true
          # sandbox: false
          compression: zip
          upsert-doi: true
          upsert-location: doi
          verbose: true
      #
      # FIXME: disabled the rest of these steps (already done by zenodraft)
      #
      - name: Get existing release
        if: false
        id: get_existing_release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          releaseId: ${{ github.event.release.id }}
      - name: Delete old release
        if: false
        uses: liudonghua123/delete-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release_id: ${{ github.event.release.id }}
      - name: Recreate release with new tag
        if: false
        id: recreate_release
        uses: joutvhu/create-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: ${{ steps.get_existing_release.outputs.name }}
          body: ${{ steps.get_existing_release.outputs.body }}
          # FIXME: have to set these both to false, because not copied
          # from the original release properly
          # draft: ${{ steps.get_existing_release.outputs.draft }}
          # prerelease: ${{ steps.get_existing_release.outputs.draft }}
          draft: false
          prerelease: false
          target_commitish: ${{ steps.get_existing_release.outputs.target_commitish }}
          on_release_exists: update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.PYPOP_RELEASE_TOKEN }}

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    # depend on zenodo, to make sure updated CITATION.cff gets into builds
    # this only results in changes upon production releases
    needs: [publish_zenodo, skip_publish_zenodo]
    # trying solution here: https://github.com/actions/runner/issues/491#issuecomment-1507495166
    # so that it works if either job in "needs" completes
    if: always() && !cancelled() && !failure()
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        #os: [ubuntu-20.04, macos-11, windows-2019]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # FIXME: if on a release, use the tag name, not original SHA because it might be changed (somewhat hacky)
          ref: ${{ (github.event_name == 'release' && github.event.action == 'published') && github.ref_name || '' }}
      - name: Build and test wheels
        uses: pypa/cibuildwheel@v2.16.2
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"
      - name: Store unit tests output
        run: |
          tar zcvf unit_tests_output.tar.gz run_test_*
          cp unit_tests_output.tar.gz ./wheelhouse/
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    # depend on zenodo, to make sure updated CITATION.cff gets into builds
    needs: [publish_zenodo, skip_publish_zenodo]
    if: always() && !cancelled() && !failure()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:  # FIXME: if on a release, use the tag name, not original SHA because it might be changed (somewhat hacky)
          ref: ${{ (github.event_name == 'release' && github.event.action == 'published') && github.ref_name || '' }}
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_gh_release:
    name: Upload binary wheels and sdist to GH release page
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    if: github.event_name == 'release' && github.event.action == 'published' && always() && !cancelled() && !failure()
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist
      - uses: softprops/action-gh-release@v1
        name: Uploading binaries to release page
        with:
          files: dist/*

  upload_test_pypi:
    name: Upload to Test_PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: test_pypi
    permissions:
      id-token: write
    # drop requirement of 'main', release to test_pypi to test releases
    if: github.event_name == 'release' && github.event.action == 'published' && always() && !cancelled() && !failure()
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event.release.target_commitish == 'main' && github.event_name == 'release' && github.event.action == 'published' && always()  && !cancelled() && !failure()
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
