**Class library for population genetics statistics.**

<!-- Do not edit line below -->
*Lasted updated: $Date$ by $Author$.*

- 'ParseFile' is a base class which has most of the common functionality
for reading files.

- 'ParseGenotypeFile' is a subclass of 'ParseFile' that deals with
files that consist specifically of data with individual genotyped for
one or more loci.

- 'ParseAlleleCount' is another subclass of 'ParseFile' that deals
with files consisting of allele counts across a whole population.

- 'HardyWeinberg' is a class that calculates Hardy-Weinberg
statistics given genotype data for a single locus.

- 'HardyWeinbergGuoThompson' a subclass of HardyWeinberg that uses the
Guo & Thompson algorithm for calculating statistics.

- 'Haplo' is an abstract base class for estimating haplotypes given
genotype data.

- 'HaploArlequin' is a subclass of 'Haplo' that uses Arlequin for
estimation of haplotypes.

- 'ArlequinBatch' the underlying class that `wraps' the functionality
of the "Arlequin":http://lgb.unige.ch/arlequin/ program to estimate
haplotypes.  This class, in turn, supplies 'HaploArlequin' with required
information.

- 'Homozygosity' Calculates homozygosity statistics for a given locus,
calculates the observed homozygosity and returns the approximate
expected homozygosity statistics taken from previous simulation runs.

Both file formats are assumed to have a population header information
with, consisting of a line of column headers (population metadata)
followed by a line with the actual data, followed by the column
headers for the samples (sample metadata) followed by the sample data
itself (either individuals in the genotyped case, or alleles in the
allele count case).


**TODO**

2001-09-14:

- HardyWeinberg: Output a lower-triangular matrix for all relevant
  values. (mpn/alex)

- Output information about missing data on a per-locus basis (i.e. any
  deviations from the total number of individuals in each input
  file).  (alex)

2001-09-13: 

- "getopt-ify" emphaplofreq so that all currently hardcoded parameters
  can be passed in via command-line options.  (alex)

- Add parameters for Guo and Thompson into "config.ini".  (alex: DONE
  2001-09-18)

- Make number of significant figures reported be a global parameter
  set in "config.ini" (e.g. "%.4f") (alex)


2001-07-31:

- Finish cleaning up 'HardyWeinberg'. (alex/mpn)

- Implement a 'PopGenStats' module?  Move some 'population-level'
  statistics into this module. (alex)

More long-term:

2001-09-13:

- Wrap emphaplofreq with SWIG, so that it can be called directly as a
  Python object.  (alex)

- Abstract the configurator?  [use reflection to construct objects, so
  that constructors don't have to be hard-coded.]  (alex)

2001-07-31:

- Rationalize naming conventions. (?)

- Implement 'ParseAlleleCount'. (?)

**NOTE**: When editing this 'README' file, it will help to adhere to
the "structured text
conventions":http://www.python.org/sigs/doc-sig/stext.html since
Happydoc uses this information to format output documentation
(including HTML) nicely.

<!--
Local variables:
mode: text
End:
-->
