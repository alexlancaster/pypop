"""Generate API stubs."""

import sys
from pathlib import Path


def generate_deprecated_stubs(build_lib, deprecated_modules):
    """Create stub modules in build/lib to keep old CamelCase imports working."""
    IS_CASE_INSENSITIVE = sys.platform.startswith("win") or sys.platform == "darwin"

    for old_name, new_name in deprecated_modules.items():
        # Skip stub if old/new names would clash on case-insensitive FS
        if IS_CASE_INSENSITIVE and old_name.lower() == new_name.lower():
            continue

        parts = old_name.split(".")
        stub_file = Path(build_lib, *parts).with_suffix(".py")
        stub_file.parent.mkdir(parents=True, exist_ok=True)

        # new_mod = new_name.split(".")[-1]
        with open(stub_file, "w") as f:
            f.write(
                f"""\
# THIS FILE IS AUTOMATICALLY GENERATED
import importlib
import sys
import warnings

_new = importlib.import_module("{new_name}")

# Commented out for now:
# warnings.warn(
#     "Module '{old_name}' is deprecated; use '{new_name}' instead",
#     DeprecationWarning,
#     stacklevel=2,
# )

globals().update(vars(_new))
sys.modules[__name__] = _new
"""
            )
